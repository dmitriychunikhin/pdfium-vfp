*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.21" SourceFile="pdfium-vfp-build.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS pdfiumbuild AS projecthook 
 	*< CLASSDATA: Baseclass="projecthook" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<PropValue>
		Height = 22
		Name = "pdfiumbuild"
		Width = 23
	*</PropValue>
	
	PROCEDURE BeforeBuild
		LPARAMETERS cOutputName, nBuildAction, lRebuildAll, lShowErrors, lBuildNewGuids
		
		LOCAL loProj
		loProj = Application.ActiveProject
		
		MODIFY CLASS pdfium_i18n OF pdfium-vfp.vcx NOWAIT METHOD Init
		
		LOCAL laSelObj(1), lnSelObj
		lnSelObj = ASELOBJ(laSelObj,1)
		
		IF lnSelObj <> 1
		    RETURN
		ENDIF
		
		LOCAL loPdfium_i18n
		loPdfium_i18n = laSelObj[1]
		
		
		CREATE CURSOR curTempText (id c(250), text m)
		
		LOCAL lcMethodList, laMethodList(1), lnMethodListSize, i, lcMethod
		lcMethodList = "text_cn,text_de,text_en,text_es,text_fr,text_ru"
		lnMethodListSize = ALINES(laMethodList, lcMethodList, 1+4, ",")
		
		
		FOR i = 1 TO lnMethodListSize
		    lcMethod = laMethodList[i]
		    
		    SELECT * FROM curTempText WHERE 1=0 INTO CURSOR curTempText READWRITE
		
		    LOCAL lcFileName
		    lcFileName = "i18n\" + lcMethod + ".xml"
		    
		    IF FILE(lcFileName)=.T.
		        XMLTOCURSOR(lcFileName, "curTempText", 512+1204+8192)
		    ENDIF
		
		    LOCAL lcTextCases
		    lcTextCases = ""
		    
		    LOCAL loDS
		    SELECT curTempText
		    SCAN
		        SELECT curTempText
		        SCATTER NAME loDS MEMO
		        
		        loDS.id = ALLTRIM(EVL(NVL(loDS.id,""),""))
		        
		        LOCAL lcText
		        lcText = ""
		        
		        LOCAL liChar
		        FOR liChar = 1 TO LEN(loDS.text)
		            lcText = NVL(EVL(lcText,NULL) + " + ", "") + TEXTMERGE("CHR(<<ASC(SUBSTR(loDS.text,liChar,1))>>)")
		        ENDFOR
		        
		        IF EMPTY(loDS.id)
		            LOOP
		        ENDIF
		        
		        TEXT TO lcTextCases NOSHOW TEXTMERGE PRETEXT 1
		        <<lcTextCases>>
		
		        CASE m.tcTxtID == "<<loDS.id>>"
		            RETURN <<lcText>>
		            
		        ENDTEXT
		
		    ENDSCAN
		
		
		    LOCAL lcMethodText
		
		    TEXT TO lcMethodText NOSHOW TEXTMERGE PRETEXT 1
		    LPARAMETERS tcTxtID
		    * This code is generated by <<This.Class>> of <<justfname(This.ClassLibrary)>>
		    
		    DO CASE
		
		    <<lcTextCases>>
		    OTHERWISE
		        RETURN <<IIF(lcMethod != "text_en", "This.text_en(m.tcTxtID)", "m.tcTxtID")>>
		
		    ENDCASE
		
		    RETURN m.tcTxtID
		    ENDTEXT
		
		    loPdfium_i18n.WriteMethod(lcMethod, lcMethodText, .T., 3)
		    
		ENDFOR
		
		USE IN curTempText
		
		
		RELEASE WINDOWS (WONTOP())
		ACTIVATE WINDOW (WONTOP())
		SYS(1500, "_MFI_SAVE", "_MFILE")
		RELEASE WINDOWS (WONTOP())
		
	ENDPROC

ENDDEFINE
