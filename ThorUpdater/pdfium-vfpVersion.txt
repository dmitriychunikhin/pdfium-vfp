lparameters toUpdateObject

* Set the properties of the passed updater object.

with toUpdateObject
	.VersionNumber    = '1.2.8 - 20240718'
	.AvailableVersion = 'pdfium-vfp-1.2.8-update-20240718'
	.Notes            = GetNotes()
	.RegisterWithThor = GetRegisterWithThor()
endwith
return toUpdateObject

* Get the notes for the project.

procedure GetNotes
local lcNotes
text to lcNotes noshow
1.2.7: VFPX Deployment

endtext
return lcNotes

* Register the tool with Thor. Note: Thor replaces ##InstallFolder## with the
* installation path for the tool when this code is executed.


procedure GetRegisterWithThor
 local lcCommand
 text to lcCommand noshow
* "pdfium-vfp" is a tool created by VFPX Deployment:
* Create the tool under Thor Tools.

loThorInfo = Execscript (_Screen.cThorDispatcher, 'Thor Register=')
with loThorInfo

* Required properties.

	.PRGName    = 'Thor_Tool_pdfium-vfp'
	.FolderName = '##InstallFolder##'
	.Prompt     = 'pdfium-vfp'
	.AppID      = 'pdfium-vfp'

* Optional properties.

	.Description = 'pdfium-vfp'

* These are used to group and sort tools when they are displayed in menus or
* the Thor form.

	.Category        = 'Applications'
	.CanRunAtStartUp = .F.

* This is the code to execute when the tool is selected.

	.Code = "do ('##InstallFolder##pdfium-vfp.app')"

* Register the tool with Thor.

	llRegister = .Register()
endwith
 endtext

 return lcCommand
endproc &&GetRegisterWithThor


*created by VFPX Deployment, 18.07.24 04:27:55